[gd_scene load_steps=6 format=2]

[ext_resource path="res://src/objects/RubiksCube.tscn" type="PackedScene" id=1]
[ext_resource path="res://src/Camera.gd" type="Script" id=2]
[ext_resource path="res://src/Main.gd" type="Script" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float width = 8.0;
uniform vec4 color: hint_color;

vec4 create_frame(sampler2D tex, vec2 pixel_size, vec2 uv) {
	vec4 pixel = texture(tex, uv);
	
	if (pixel.a == 0.0) {
		vec2 frame = pixel_size * width;
		
		for (float x = -frame.x; x <= frame.x; x += pixel_size.x) {
			for (float y = -frame.y; y <= frame.y; y += pixel_size.y) {
				vec4 p = texture(tex, uv + vec2(x, y));
				
				if (p.a != 0.0) {
					return color;
				}
			}
		}
	}
	return vec4(0.0);
}

void fragment() {
	COLOR = create_frame(TEXTURE, TEXTURE_PIXEL_SIZE, UV);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/width = 3.0
shader_param/color = Color( 1, 1, 1, 1 )

[node name="Main" type="Spatial"]
script = ExtResource( 3 )

[node name="RubiksCube" parent="." instance=ExtResource( 1 )]

[node name="Camera" type="Camera" parent="."]
transform = Transform( -1.62921e-07, 0, 1, 0, 1, 0, -1, 0, -1.62921e-07, 8, 0, 0 )
cull_mask = 3
script = ExtResource( 2 )

[node name="ViewportContainer" type="ViewportContainer" parent="."]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
stretch = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 1024, 600 )
size_override_stretch = true
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="ViewportContainer/Viewport"]
transform = Transform( -1.62921e-07, 0, 1, 0, 1, 0, -1, 0, -1.62921e-07, 8, 0, 0 )
cull_mask = 2
